test_creation()
test_coercion()
test_subset()
test_write()
test_describing()
test_reattach()
test_paths()
test_paths()
test_update()
new.ds[,]
ds[,]
packageVersion("bigmemory")
ds[1,1]
updateBigMatrix
debug(updateBigMatrix)
path
debug(updateBigMatrix)
object$descpath
file.exists(object$descpath)
attach.resource
bigmemory::attach.resource
getMethods("attach.resource")
showMethods("attach.resource")
getMethod("attach.resource", "character")
info
names(info)
ct(names(info))
Q
dirname(object$descpath))
dirname(object$descpath)
Q
dirname(object$descpath)
Q
path = "/gne/research"
dirname(path)
filename(path)
basename(path)
info
Q
file
info
describe(ds)
ds@.xData
ds$desc
ds$descpath
obj = readRDS(ds$descpath)
obj
Q
obje$description
obj$description
obj
ds
obj = readRDS(ds$descpath)
objx
obj
?filebacked.big.matrix
desc.file
describe(ds$bigmat)
test_creation())
test_creation()
test_coercion()
test_subset()
test_write()
Q
test_write()
test_describing()
test_reattach()
test_paths()
test_update()
info
names(info)
Q
describe(ds)
ds$description
ds$description())
ds$description())
ds$description()
ds
ds
ds$description
ds
class(ds)
object = ds
ls(ds)
ds$descpath
class(ds)
file.exists(ds$descpath)
attach.big.matrix
getwd())
library(formatR)
getwd()
setwd("../../")
tidy_dir("R")
tidy_dir("R")
exit()
cbind(names(description))
description
packageVersion("bigmemory")
Q
ds
describe(ds)
ds$description
test_creation()
test_coercion()
test_subset()
test_write()
test_describing()
test_reattach()
test_paths()
test_update()
desc.list
cbind(names(description))
cbind(names(desc.list))
ls(object)
object$datapath
object$datapath()
object$.datapath
ls(object)
x = as.list(object)
x$datapath
x$datapath()
desc
names(desc)
desc
Q
desclist
desc.list
class(desc.list)
new.desc
file.exist(file.path(desc.list$dirname, desc.list$filename))
file.exists(file.path(desc.list$dirname, desc.list$filename))
file.exists(file.path(desc.list$dirname, desc.list$filename))
debug(attach.resource)
file
file.exists(file)
address
info$filename
info$dirname
info$totalRows
info$totalCols
info$rowNames
info$colNames
typeLength
info$separated
readOnly
info$rowNames = letters[1:3]
info$colNames = letters[1:3]
address
info
Q
ls(ds, all.names = TRUE)
exit())
exit()
